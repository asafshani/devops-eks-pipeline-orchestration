pipeline {
  agent any

  stages {
    stage('Inject AWS Credentials') {
      steps {
        withCredentials([
          usernamePassword(
            credentialsId: '5ccc6ba5-8604-4d45-afd2-e653e0bbe9ad',
            usernameVariable: 'AWS_ACCESS_KEY_ID',
            passwordVariable: 'AWS_SECRET_ACCESS_KEY'
          )
        ]) {

          // Optional debug step to confirm credential injection
          sh 'aws sts get-caller-identity'

          // Clone the Terraform repo
          git branch: 'main',
              url: 'https://github.com/asafshani/terraform-aws-networking.git'

          // Terraform stages
          sh 'terraform init'
          sh 'terraform plan -out=tfplan'
          sh 'terraform apply -auto-approve tfplan'
        }
      }
    }
  }

  post {
    success {
      echo 'Terraform applied successfully. Triggering Ansible pipeline...'
      build job: 'ansible-pipeline'
    }

    failure {
      echo 'Terraform pipeline failed. Investigate logs before triggering Ansible.'
    }

    always {
      echo 'Terraform pipeline completed.'
    }
  }
}
